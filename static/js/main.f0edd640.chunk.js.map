{"version":3,"sources":["component/fccproject.js","App.js","serviceWorker.js","reducers/sectionReducer.js","reducers/rootReducer.js","index.js"],"names":["fccproject","handleChange","setTimeout","randomMachine","Math","floor","random","props","Quotes","length","document","getElementById","innerHTML","quote","toUpperCase","author","handleClick","querySelector","window","open","textContent","toLowerCase","id","className","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","fillOpacity","this","onClick","aria-hidden","Component","connect","state","section","quotes","App","Boolean","location","hostname","match","initialState","sectionReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wPAGMA,E,4MAEFC,aAAe,WAEZC,YAAW,WACV,IAAMC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAW,EAAKC,MAAMC,OAAOC,QACnEC,SAASC,eAAe,QAAQC,UAAhC,WAAgD,EAAKL,MAAMC,OAAOL,GAAeU,MAAMC,cAAvF,KACAJ,SAASC,eAAe,UAAUC,UAAY,EAAKL,MAAMC,OAAOL,GAAeY,OAAOD,gBACpF,M,EAINE,YAAc,WACV,IAAMH,EAAQH,SAASO,cAAc,SAC/BF,EAASL,SAASO,cAAc,WACtCC,OAAOC,KAAP,wEAA6EN,EAAMO,YAAYC,cAA/F,YAAgHN,EAAOK,YAAYC,iB,uDAQnI,OACI,0BAAMC,GAAG,SAASC,UAAU,aAC5B,yBAAKA,UAAU,QAAQC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAOC,MAAM,8BACxF,0BAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,wHAAwHJ,KAAK,UAAUK,YAAY,SACjM,0BAAMH,SAAS,UAAUC,SAAS,UAAUC,EAAE,2HAA2HJ,KAAK,UAAUK,YAAY,UAIpM,yBAAKV,GAAG,aACA,6BACI,0BAAMA,GAAG,QAAT,IAAkBW,KAAK1B,MAAMC,OAAO,GAAGK,MAAMC,cAA7C,MAEJ,6BACI,0BAAMQ,GAAG,UAAT,IAAoBW,KAAK1B,MAAMC,OAAO,GAAGO,SAE7C,yBAAKQ,UAAU,iBACf,4BAAQW,QAASD,KAAKjB,YAAaM,GAAG,eAAe,uBAAGC,UAAU,uBAAuBY,cAAY,UACrG,4BAASD,QAASD,KAAKhC,aAAcqB,GAAG,aAAxC,oB,GAxCKc,aAsDVC,eANe,SAACC,GAC3B,MAAO,CACH9B,OAAQ8B,EAAMC,QAAQC,UAIfH,CAA+BrC,GC7C/ByC,MARf,WACE,OACE,yBAAKlB,UAAU,OACX,kBAAC,EAAD,QCKYmB,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2D,WClBAC,EAAe,CACjBN,OAAQ,CACJ,CAAElB,GAAI,IAAKT,MAAO,sFAAuFE,OAAQ,iBACjH,CAAEO,GAAI,IAAKT,MAAO,qEAAsEE,OAAQ,yBAChG,CAAEO,GAAI,IAAKT,MAAO,2EAA4EE,OAAQ,iBACtG,CAAEO,GAAI,IAAKT,MAAO,gFAAkFE,OAAQ,0BAC5G,CAAEO,GAAI,IAAKT,MAAO,yEAA0EE,OAAQ,qBACpG,CAAEO,GAAI,IAAKT,MAAO,yEAA0EE,OAAQ,qBACpG,CAAEO,GAAI,IAAKT,MAAO,qHAAsHE,OAAQ,gBAChJ,CAAEO,GAAI,IAAKT,MAAO,wEAAyEE,OAAQ,aACnG,CAAEO,GAAI,IAAKT,MAAO,+CAAgDE,OAAQ,cAC1E,CAAEO,GAAI,KAAMT,MAAO,0FAA2FE,OAAQ,yBAU/GgC,MAJf,WAAsD,IAA9BT,EAA6B,uDAArBQ,EAC5B,OADiD,iCAC1CR,GCTIU,EALKC,YAAgB,CAChCV,QAASQ,ICIPG,EAAQC,YAAYH,GAC1BI,IAASC,OAEP,kBAAC,IAAMC,WAAP,KACA,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,QAGFxC,SAASC,eAAe,SHkHpB,kBAAmB4C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f0edd640.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass fccproject extends Component {\r\n\r\n    handleChange = () => {\r\n    //Adding quotes randomly.\r\n       setTimeout(() => {\r\n        const randomMachine = Math.floor(Math.random() * this.props.Quotes.length);\r\n        document.getElementById('text').innerHTML = `\"${this.props.Quotes[randomMachine].quote.toUpperCase()}\"`;\r\n        document.getElementById('author').innerHTML = this.props.Quotes[randomMachine].author.toUpperCase();\r\n       }, 500);\r\n    }\r\n    \r\n\r\n    handleClick = () => {\r\n        const quote = document.querySelector('#text');\r\n        const author = document.querySelector('#author');\r\n        window.open(`https://twitter.com/intent/tweet?hashtags=quotes&related&text=${quote.textContent.toLowerCase()} ${author.textContent.toLowerCase()}`);\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(this.props);\r\n        return (\r\n            <main id=\" shell\" className=\"container\">\r\n            <svg className=\"quote\" width=\"289\" height=\"247\" viewBox=\"0 0 289 247\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M128 0H0V128H71.4729C75.1213 145.774 75.6327 176.059 55 191V247C109.667 237.13 126.022 167.029 127.831 128H128V122V0Z\" fill=\"#030303\" fillOpacity=\"0.09\"/>\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M289 0H161V128H232.473C236.121 145.774 236.633 176.059 216 191V247C270.667 237.13 287.022 167.029 288.831 128H289V122V0Z\" fill=\"#030303\" fillOpacity=\"0.09\"/>\r\n            </svg>\r\n            \r\n\r\n            <div id=\"quote-box\">\r\n                    <div>\r\n                        <span id=\"text\">\"{this.props.Quotes[1].quote.toUpperCase()}\"</span>\r\n                    </div>\r\n                    <div>\r\n                        <span id=\"author\">-{this.props.Quotes[1].author}</span>\r\n                    </div>\r\n                    <div className=\"button-column\">\r\n                    <button onClick={this.handleClick} id=\"tweet-quote\" ><i className=\"fa fa-twitter-square\" aria-hidden=\"true\"></i></button>\r\n                    <button  onClick={this.handleChange} id=\"new-quote\">New Quote</button></div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst makeStateEqualToProps = (state) => {\r\n    return {\r\n        Quotes: state.section.quotes,\r\n    }\r\n}\r\n\r\nexport default connect(makeStateEqualToProps)(fccproject);","import React from 'react';\nimport  Fccproject from './component/fccproject.js'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Fccproject/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    quotes: [\r\n        { id: '1', quote: 'Spread love everywhere you go. Let no one ever come to you without leaving happier.', author: 'Mother Teresa' },\r\n        { id: '2', quote: 'When you reach the end of your rope, tie a knot in it and hang on.', author: 'Franklin D. Roosevelt' },\r\n        { id: '3', quote: 'Always remember that you are absolutely unique. Just like everyone else.', author: 'Margaret Mead' },\r\n        { id: '4', quote: 'Don\\'t judge each day by the harvest you reap but by the seeds that you plant.', author: 'Robert Louis Stevenson' },\r\n        { id: '5', quote: 'The future belongs to those who believe in the beauty of their dreams.', author: 'Eleanor Roosevelt' },\r\n        { id: '6', quote: 'Tell me and I forget. Teach me and I remember. Involve me and I learn.', author: 'Benjamin Franklin' },\r\n        { id: '7', quote: 'The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.', author: 'Helen Keller' },\r\n        { id: '8', quote: 'It is during our darkest moments that we must focus to see the light.', author: 'Aristotle' },\r\n        { id: '9', quote: 'Whoever is happy will make others happy too.', author: 'Anne Frank' },\r\n        { id: '10', quote: 'Do not go where the path may lead, go instead where there is no path and leave a trail.', author: 'Ralph Waldo Emerson' },\r\n        \r\n    ]\r\n}\r\n\r\n\r\nfunction sectionReducer(state = initialState, action){\r\n    return state;\r\n}\r\n\r\nexport default sectionReducer;","import { combineReducers } from 'redux';\r\nimport sectionReducer from './sectionReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    section: sectionReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport  rootReducer  from './reducers/rootReducer.js';\n\nconst store = createStore(rootReducer);\nReactDOM.render(\n  \n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}